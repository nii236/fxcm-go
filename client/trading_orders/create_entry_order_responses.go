// Code generated by go-swagger; DO NOT EDIT.

package trading_orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/nii236/fxcm-go/models"
)

// CreateEntryOrderReader is a Reader for the CreateEntryOrder structure.
type CreateEntryOrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateEntryOrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateEntryOrderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCreateEntryOrderUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateEntryOrderForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateEntryOrderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateEntryOrderOK creates a CreateEntryOrderOK with default headers values
func NewCreateEntryOrderOK() *CreateEntryOrderOK {
	return &CreateEntryOrderOK{}
}

/*CreateEntryOrderOK handles this case with default header values.

OK
*/
type CreateEntryOrderOK struct {
	Payload *models.TraderOrdersResponseDefinition
}

func (o *CreateEntryOrderOK) Error() string {
	return fmt.Sprintf("[POST /trading/create_entry_order][%d] createEntryOrderOK  %+v", 200, o.Payload)
}

func (o *CreateEntryOrderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TraderOrdersResponseDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEntryOrderUnauthorized creates a CreateEntryOrderUnauthorized with default headers values
func NewCreateEntryOrderUnauthorized() *CreateEntryOrderUnauthorized {
	return &CreateEntryOrderUnauthorized{}
}

/*CreateEntryOrderUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateEntryOrderUnauthorized struct {
	Payload *models.Error401Unauthorized
}

func (o *CreateEntryOrderUnauthorized) Error() string {
	return fmt.Sprintf("[POST /trading/create_entry_order][%d] createEntryOrderUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateEntryOrderUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error401Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEntryOrderForbidden creates a CreateEntryOrderForbidden with default headers values
func NewCreateEntryOrderForbidden() *CreateEntryOrderForbidden {
	return &CreateEntryOrderForbidden{}
}

/*CreateEntryOrderForbidden handles this case with default header values.

Forbidden
*/
type CreateEntryOrderForbidden struct {
	Payload *models.Error403Forbidden
}

func (o *CreateEntryOrderForbidden) Error() string {
	return fmt.Sprintf("[POST /trading/create_entry_order][%d] createEntryOrderForbidden  %+v", 403, o.Payload)
}

func (o *CreateEntryOrderForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error403Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEntryOrderNotFound creates a CreateEntryOrderNotFound with default headers values
func NewCreateEntryOrderNotFound() *CreateEntryOrderNotFound {
	return &CreateEntryOrderNotFound{}
}

/*CreateEntryOrderNotFound handles this case with default header values.

Not found
*/
type CreateEntryOrderNotFound struct {
	Payload *models.Error404NotFound
}

func (o *CreateEntryOrderNotFound) Error() string {
	return fmt.Sprintf("[POST /trading/create_entry_order][%d] createEntryOrderNotFound  %+v", 404, o.Payload)
}

func (o *CreateEntryOrderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error404NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
