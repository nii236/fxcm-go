// Code generated by go-swagger; DO NOT EDIT.

package trading_tables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/nii236/fxcm-go/models"
)

// TradingTableOrdersTableReader is a Reader for the TradingTableOrdersTable structure.
type TradingTableOrdersTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TradingTableOrdersTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTradingTableOrdersTableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewTradingTableOrdersTableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewTradingTableOrdersTableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewTradingTableOrdersTableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTradingTableOrdersTableOK creates a TradingTableOrdersTableOK with default headers values
func NewTradingTableOrdersTableOK() *TradingTableOrdersTableOK {
	return &TradingTableOrdersTableOK{}
}

/*TradingTableOrdersTableOK handles this case with default header values.

OK
*/
type TradingTableOrdersTableOK struct {
	Payload *models.OrdersTableResponseDefinition
}

func (o *TradingTableOrdersTableOK) Error() string {
	return fmt.Sprintf("[GET /trading/get_model&model=Order][%d] tradingTableOrdersTableOK  %+v", 200, o.Payload)
}

func (o *TradingTableOrdersTableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrdersTableResponseDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTradingTableOrdersTableUnauthorized creates a TradingTableOrdersTableUnauthorized with default headers values
func NewTradingTableOrdersTableUnauthorized() *TradingTableOrdersTableUnauthorized {
	return &TradingTableOrdersTableUnauthorized{}
}

/*TradingTableOrdersTableUnauthorized handles this case with default header values.

Unauthorized
*/
type TradingTableOrdersTableUnauthorized struct {
	Payload *models.Error401Unauthorized
}

func (o *TradingTableOrdersTableUnauthorized) Error() string {
	return fmt.Sprintf("[GET /trading/get_model&model=Order][%d] tradingTableOrdersTableUnauthorized  %+v", 401, o.Payload)
}

func (o *TradingTableOrdersTableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error401Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTradingTableOrdersTableForbidden creates a TradingTableOrdersTableForbidden with default headers values
func NewTradingTableOrdersTableForbidden() *TradingTableOrdersTableForbidden {
	return &TradingTableOrdersTableForbidden{}
}

/*TradingTableOrdersTableForbidden handles this case with default header values.

Forbidden
*/
type TradingTableOrdersTableForbidden struct {
	Payload *models.Error403Forbidden
}

func (o *TradingTableOrdersTableForbidden) Error() string {
	return fmt.Sprintf("[GET /trading/get_model&model=Order][%d] tradingTableOrdersTableForbidden  %+v", 403, o.Payload)
}

func (o *TradingTableOrdersTableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error403Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTradingTableOrdersTableNotFound creates a TradingTableOrdersTableNotFound with default headers values
func NewTradingTableOrdersTableNotFound() *TradingTableOrdersTableNotFound {
	return &TradingTableOrdersTableNotFound{}
}

/*TradingTableOrdersTableNotFound handles this case with default header values.

Not found
*/
type TradingTableOrdersTableNotFound struct {
	Payload *models.Error404NotFound
}

func (o *TradingTableOrdersTableNotFound) Error() string {
	return fmt.Sprintf("[GET /trading/get_model&model=Order][%d] tradingTableOrdersTableNotFound  %+v", 404, o.Payload)
}

func (o *TradingTableOrdersTableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error404NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
