// Code generated by go-swagger; DO NOT EDIT.

package trading_tables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/nii236/fxcm-go/models"
)

// TradingTableUnsubscribeTradingTableReader is a Reader for the TradingTableUnsubscribeTradingTable structure.
type TradingTableUnsubscribeTradingTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TradingTableUnsubscribeTradingTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTradingTableUnsubscribeTradingTableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewTradingTableUnsubscribeTradingTableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewTradingTableUnsubscribeTradingTableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewTradingTableUnsubscribeTradingTableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTradingTableUnsubscribeTradingTableOK creates a TradingTableUnsubscribeTradingTableOK with default headers values
func NewTradingTableUnsubscribeTradingTableOK() *TradingTableUnsubscribeTradingTableOK {
	return &TradingTableUnsubscribeTradingTableOK{}
}

/*TradingTableUnsubscribeTradingTableOK handles this case with default header values.

OK
*/
type TradingTableUnsubscribeTradingTableOK struct {
	Payload *models.UnsubscribeTradingTableResponseDefinition
}

func (o *TradingTableUnsubscribeTradingTableOK) Error() string {
	return fmt.Sprintf("[POST /trading/unsubscribe][%d] tradingTableUnsubscribeTradingTableOK  %+v", 200, o.Payload)
}

func (o *TradingTableUnsubscribeTradingTableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnsubscribeTradingTableResponseDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTradingTableUnsubscribeTradingTableUnauthorized creates a TradingTableUnsubscribeTradingTableUnauthorized with default headers values
func NewTradingTableUnsubscribeTradingTableUnauthorized() *TradingTableUnsubscribeTradingTableUnauthorized {
	return &TradingTableUnsubscribeTradingTableUnauthorized{}
}

/*TradingTableUnsubscribeTradingTableUnauthorized handles this case with default header values.

Unauthorized
*/
type TradingTableUnsubscribeTradingTableUnauthorized struct {
	Payload *models.Error401Unauthorized
}

func (o *TradingTableUnsubscribeTradingTableUnauthorized) Error() string {
	return fmt.Sprintf("[POST /trading/unsubscribe][%d] tradingTableUnsubscribeTradingTableUnauthorized  %+v", 401, o.Payload)
}

func (o *TradingTableUnsubscribeTradingTableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error401Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTradingTableUnsubscribeTradingTableForbidden creates a TradingTableUnsubscribeTradingTableForbidden with default headers values
func NewTradingTableUnsubscribeTradingTableForbidden() *TradingTableUnsubscribeTradingTableForbidden {
	return &TradingTableUnsubscribeTradingTableForbidden{}
}

/*TradingTableUnsubscribeTradingTableForbidden handles this case with default header values.

Forbidden
*/
type TradingTableUnsubscribeTradingTableForbidden struct {
	Payload *models.Error403Forbidden
}

func (o *TradingTableUnsubscribeTradingTableForbidden) Error() string {
	return fmt.Sprintf("[POST /trading/unsubscribe][%d] tradingTableUnsubscribeTradingTableForbidden  %+v", 403, o.Payload)
}

func (o *TradingTableUnsubscribeTradingTableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error403Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTradingTableUnsubscribeTradingTableNotFound creates a TradingTableUnsubscribeTradingTableNotFound with default headers values
func NewTradingTableUnsubscribeTradingTableNotFound() *TradingTableUnsubscribeTradingTableNotFound {
	return &TradingTableUnsubscribeTradingTableNotFound{}
}

/*TradingTableUnsubscribeTradingTableNotFound handles this case with default header values.

Not found
*/
type TradingTableUnsubscribeTradingTableNotFound struct {
	Payload *models.Error404NotFound
}

func (o *TradingTableUnsubscribeTradingTableNotFound) Error() string {
	return fmt.Sprintf("[POST /trading/unsubscribe][%d] tradingTableUnsubscribeTradingTableNotFound  %+v", 404, o.Payload)
}

func (o *TradingTableUnsubscribeTradingTableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error404NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
