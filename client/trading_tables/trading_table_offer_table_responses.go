// Code generated by go-swagger; DO NOT EDIT.

package trading_tables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/nii236/fxcm-go/models"
)

// TradingTableOfferTableReader is a Reader for the TradingTableOfferTable structure.
type TradingTableOfferTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TradingTableOfferTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTradingTableOfferTableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewTradingTableOfferTableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewTradingTableOfferTableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewTradingTableOfferTableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTradingTableOfferTableOK creates a TradingTableOfferTableOK with default headers values
func NewTradingTableOfferTableOK() *TradingTableOfferTableOK {
	return &TradingTableOfferTableOK{}
}

/*TradingTableOfferTableOK handles this case with default header values.

OK
*/
type TradingTableOfferTableOK struct {
	Payload *models.OfferTableResponseDefinition
}

func (o *TradingTableOfferTableOK) Error() string {
	return fmt.Sprintf("[GET /trading/get_model&model=Offer][%d] tradingTableOfferTableOK  %+v", 200, o.Payload)
}

func (o *TradingTableOfferTableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OfferTableResponseDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTradingTableOfferTableUnauthorized creates a TradingTableOfferTableUnauthorized with default headers values
func NewTradingTableOfferTableUnauthorized() *TradingTableOfferTableUnauthorized {
	return &TradingTableOfferTableUnauthorized{}
}

/*TradingTableOfferTableUnauthorized handles this case with default header values.

Unauthorized
*/
type TradingTableOfferTableUnauthorized struct {
	Payload *models.Error401Unauthorized
}

func (o *TradingTableOfferTableUnauthorized) Error() string {
	return fmt.Sprintf("[GET /trading/get_model&model=Offer][%d] tradingTableOfferTableUnauthorized  %+v", 401, o.Payload)
}

func (o *TradingTableOfferTableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error401Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTradingTableOfferTableForbidden creates a TradingTableOfferTableForbidden with default headers values
func NewTradingTableOfferTableForbidden() *TradingTableOfferTableForbidden {
	return &TradingTableOfferTableForbidden{}
}

/*TradingTableOfferTableForbidden handles this case with default header values.

Forbidden
*/
type TradingTableOfferTableForbidden struct {
	Payload *models.Error403Forbidden
}

func (o *TradingTableOfferTableForbidden) Error() string {
	return fmt.Sprintf("[GET /trading/get_model&model=Offer][%d] tradingTableOfferTableForbidden  %+v", 403, o.Payload)
}

func (o *TradingTableOfferTableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error403Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTradingTableOfferTableNotFound creates a TradingTableOfferTableNotFound with default headers values
func NewTradingTableOfferTableNotFound() *TradingTableOfferTableNotFound {
	return &TradingTableOfferTableNotFound{}
}

/*TradingTableOfferTableNotFound handles this case with default header values.

Not found
*/
type TradingTableOfferTableNotFound struct {
	Payload *models.Error404NotFound
}

func (o *TradingTableOfferTableNotFound) Error() string {
	return fmt.Sprintf("[GET /trading/get_model&model=Offer][%d] tradingTableOfferTableNotFound  %+v", 404, o.Payload)
}

func (o *TradingTableOfferTableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error404NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
