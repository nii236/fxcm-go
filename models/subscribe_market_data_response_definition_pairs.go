// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SubscribeMarketDataResponseDefinitionPairs subscribe market data response definition pairs
// swagger:model subscribeMarketDataResponseDefinitionPairs
type SubscribeMarketDataResponseDefinitionPairs struct {

	// rates
	// Max Items: 6
	// Min Items: 6
	Rates []float64 `json:"Rates"`

	// Symbols
	Symbol string `json:"Symbol,omitempty"`

	// Timestamp of last update
	Updated float64 `json:"Updated,omitempty"`
}

// Validate validates this subscribe market data response definition pairs
func (m *SubscribeMarketDataResponseDefinitionPairs) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRates(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SubscribeMarketDataResponseDefinitionPairs) validateRates(formats strfmt.Registry) error {

	if swag.IsZero(m.Rates) { // not required
		return nil
	}

	iRatesSize := int64(len(m.Rates))

	if err := validate.MinItems("Rates", "body", iRatesSize, 6); err != nil {
		return err
	}

	if err := validate.MaxItems("Rates", "body", iRatesSize, 6); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SubscribeMarketDataResponseDefinitionPairs) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SubscribeMarketDataResponseDefinitionPairs) UnmarshalBinary(b []byte) error {
	var res SubscribeMarketDataResponseDefinitionPairs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
