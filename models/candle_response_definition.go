// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CandleResponseDefinition candle response definition
// swagger:model candleResponseDefinition
type CandleResponseDefinition struct {

	// candles
	Candles CandleResponseDefinitionCandles `json:"candles"`

	// ID of requested symbol
	InstrumentID float64 `json:"instrument_id,omitempty"`

	// Timeframe of the candles
	PeriodID string `json:"period_id,omitempty"`

	// response
	Response *CandleResponseDefinitionResponse `json:"response,omitempty"`
}

// Validate validates this candle response definition
func (m *CandleResponseDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePeriodID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateResponse(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var candleResponseDefinitionTypePeriodIDPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["m1","m5","m15","m30","H1","H2","H3","H4","H6","H8","D1","W1","M1"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		candleResponseDefinitionTypePeriodIDPropEnum = append(candleResponseDefinitionTypePeriodIDPropEnum, v)
	}
}

const (
	// CandleResponseDefinitionPeriodIDM1 captures enum value "m1"
	CandleResponseDefinitionPeriodIDm1 string = "m1"
	// CandleResponseDefinitionPeriodIDM5 captures enum value "m5"
	CandleResponseDefinitionPeriodIDM5 string = "m5"
	// CandleResponseDefinitionPeriodIDM15 captures enum value "m15"
	CandleResponseDefinitionPeriodIDM15 string = "m15"
	// CandleResponseDefinitionPeriodIDM30 captures enum value "m30"
	CandleResponseDefinitionPeriodIDM30 string = "m30"
	// CandleResponseDefinitionPeriodIDH1 captures enum value "H1"
	CandleResponseDefinitionPeriodIDH1 string = "H1"
	// CandleResponseDefinitionPeriodIDH2 captures enum value "H2"
	CandleResponseDefinitionPeriodIDH2 string = "H2"
	// CandleResponseDefinitionPeriodIDH3 captures enum value "H3"
	CandleResponseDefinitionPeriodIDH3 string = "H3"
	// CandleResponseDefinitionPeriodIDH4 captures enum value "H4"
	CandleResponseDefinitionPeriodIDH4 string = "H4"
	// CandleResponseDefinitionPeriodIDH6 captures enum value "H6"
	CandleResponseDefinitionPeriodIDH6 string = "H6"
	// CandleResponseDefinitionPeriodIDH8 captures enum value "H8"
	CandleResponseDefinitionPeriodIDH8 string = "H8"
	// CandleResponseDefinitionPeriodIDD1 captures enum value "D1"
	CandleResponseDefinitionPeriodIDD1 string = "D1"
	// CandleResponseDefinitionPeriodIDW1 captures enum value "W1"
	CandleResponseDefinitionPeriodIDW1 string = "W1"
	// CandleResponseDefinitionPeriodIDM1 captures enum value "M1"
	CandleResponseDefinitionPeriodIDM1 string = "M1"
)

// prop value enum
func (m *CandleResponseDefinition) validatePeriodIDEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, candleResponseDefinitionTypePeriodIDPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CandleResponseDefinition) validatePeriodID(formats strfmt.Registry) error {

	if swag.IsZero(m.PeriodID) { // not required
		return nil
	}

	// value enum
	if err := m.validatePeriodIDEnum("period_id", "body", m.PeriodID); err != nil {
		return err
	}

	return nil
}

func (m *CandleResponseDefinition) validateResponse(formats strfmt.Registry) error {

	if swag.IsZero(m.Response) { // not required
		return nil
	}

	if m.Response != nil {

		if err := m.Response.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("response")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CandleResponseDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CandleResponseDefinition) UnmarshalBinary(b []byte) error {
	var res CandleResponseDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
